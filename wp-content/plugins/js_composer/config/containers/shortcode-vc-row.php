<?php
return array(
	'name' => __( 'Row' , 'js_composer' ),
	'is_container' => true,
	'icon' => 'icon-wpb-row',
	'show_settings_on_create' => false,
	'category' => __( 'Content', 'js_composer' ),
	'description' => __( 'Place content elements inside the row', 'js_composer' ),
	'params' => array(
		array(
			'type' => 'el_id',
			'heading' => __( 'Row ID - only for One Page template', 'js_composer' ),
			'param_name' => 'row_id',
			'description' => __( 'Enter an Unique Identifier for this row element. Only required if you are using the One Page template', 'js_composer' ),
		),
		array(
			'type' => 'dropdown',
			'heading' => __( 'Layout Width', 'js_composer' ),
			'param_name' => 'layout',
			'value' => array(
				//__( 'Default', 'js_composer' ) => '',
				__( 'Normal', 'js_composer' ) => 'normal',
				__( 'Wide / Stretch row and content', 'js_composer' ) => 'stretch_row_content',
				__( 'Wide / Stretch row and content (no paddings)', 'js_composer' ) => 'wide',
			),
			'description' => __( 'Select the layout width.', 'js_composer' ),
		),
		array(
			'type' => 'dropdown',
			'heading' => __( 'Columns gap', 'js_composer' ),
			'param_name' => 'gap',
			'value' => array(
				'0px' => '0',
				'1px' => '1',
				'2px' => '2',
				'3px' => '3',
				'4px' => '4',
				'5px' => '5',
				'10px' => '10',
				'15px' => '15',
				'20px' => '20',
				'25px' => '25',
				'30px' => '30',
				'35px' => '35',
			),
			'std' => '0',
			'description' => __( 'Select gap between columns in row.', 'js_composer' ),
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Full height row?', 'js_composer' ),
			'param_name' => 'full_height',
			'description' => __( 'If checked row will be set to full height.', 'js_composer' ),
			'value' => array( __( 'Yes', 'js_composer' ) => 'yes' ),
		),
		array(
			'type' => 'dropdown',
			'heading' => __( 'Columns position', 'js_composer' ),
			'param_name' => 'columns_placement',
			'value' => array(
				__( 'Middle', 'js_composer' ) => 'middle',
				__( 'Top', 'js_composer' ) => 'top',
				__( 'Bottom', 'js_composer' ) => 'bottom',
				__( 'Stretch', 'js_composer' ) => 'stretch',
			),
			'description' => __( 'Select columns position within row.', 'js_composer' ),
			'dependency' => array(
				'element' => 'full_height',
				'not_empty' => true,
			),
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Equal height', 'js_composer' ),
			'param_name' => 'equal_height',
			'description' => __( 'If checked columns will be set to equal height.', 'js_composer' ),
			'value' => array( __( 'Yes', 'js_composer' ) => 'yes' )
		),
		array(
			'type' => 'dropdown',
			'heading' => __( 'Content position', 'js_composer' ),
			'param_name' => 'content_placement',
			'value' => array(
				__( 'Default', 'js_composer' ) => '',
				__( 'Top', 'js_composer' ) => 'top',
				__( 'Middle', 'js_composer' ) => 'middle',
				__( 'Bottom', 'js_composer' ) => 'bottom',
			),
			'description' => __( 'Select content position within columns.', 'js_composer' ),
		),
		array(
			'type' => 'css_editor',
			'heading' => __( 'CSS box', 'js_composer' ),
			'param_name' => 'css',
			'group' => __( 'Design Options', 'js_composer' ),
		),
		array(
	      'type' => 'dropdown',
	      'heading' => __('Background Attachment', 'Nimva'),
	      'param_name' => 'bg_attachment',
	      'value' => array(__('Scroll', 'Nimva') => 'scroll', __('Fixed', 'Nimva') => 'fixed'),
	      'description' => __('The background-attachment property sets whether a background image is fixed or scrolls with the rest of the page.', 'Nimva'),
	      'group' => __( 'Design Options', 'js_composer' ),
	    ),
		array(
    	'heading' => __( 'Background Pattern', 'Nimva' ),
    	'description' => __( 'You can optionally select a pattern for this section background. This option only works when background image field is empty (above option).', 'Nimva' ),
        'param_name' => 'bg_patterns',
        'border' => 'true',
        'value' => array(
                'no-image.png' => '',
                'patterns/pattern1.jpg' => 'pattern1.jpg',
                'patterns/pattern2.png' => 'pattern2.png',
                'patterns/pattern3.jpg' => 'pattern3.jpg',
                'patterns/pattern4.jpg' => 'pattern4.jpg',
                'patterns/pattern5.png' => 'pattern5.png',
                'patterns/pattern6.jpg' => 'pattern6.jpg',
                'patterns/pattern7.png' => 'pattern7.png',
                'patterns/pattern8.png' => 'pattern8.png',
                'patterns/pattern9.jpg' => 'pattern9.jpg',
				'patterns/pattern10.png' => 'pattern10.png',
                'patterns/pattern11.jpg' => 'pattern11.jpg',
				'patterns/pattern12.jpg' => 'pattern12.jpg',
				'patterns/pattern13.jpg' => 'pattern13.jpg',
				'patterns/pattern14.jpg' => 'pattern14.jpg',
				'patterns/pattern15.png' => 'pattern15.png',
				'patterns/pattern16.png' => 'pattern16.png',
				'patterns/pattern17.png' => 'pattern17.png',
				'patterns/pattern18.jpg' => 'pattern18.jpg',
				'patterns/pattern19.jpg' => 'pattern19.jpg',
				'patterns/pattern20.jpg' => 'pattern20.jpg',
				'patterns/pattern21.jpg' => 'pattern21.jpg',
				'patterns/pattern22.png' => 'pattern22.png',
				'patterns/pattern23.jpg' => 'pattern23.jpg',
				'patterns/pattern25.png' => 'pattern25.png',
				'patterns/pattern26.png' => 'pattern26.png',
				'patterns/pattern27.png' => 'pattern27.png',
				'patterns/pattern28.png' => 'pattern28.png',
				'patterns/pattern29.jpg' => 'pattern29.jpg',
				'patterns/pattern31.png' => 'pattern31.png',
				'patterns/pattern32.jpg' => 'pattern32.jpg',
				'patterns/pattern33.jpg' => 'pattern33.jpg',
				'patterns/pattern34.png' => 'pattern34.png',
				'patterns/pattern35.jpg' => 'pattern35.jpg',
				'patterns/pattern36.png' => 'pattern36.png',
				'patterns/pattern37.png' => 'pattern37.png',
				'patterns/pattern38.png' => 'pattern38.png',
				'patterns/pattern39.png' => 'pattern39.png',
				'patterns/pattern40.png' => 'pattern40.png',
				'patterns/pattern41.jpg' => 'pattern41.jpg',
				'patterns/pattern42.png' => 'pattern42.png',
				'patterns/pattern43.png' => 'pattern43.png',
				'patterns/pattern44.jpg' => 'pattern44.jpg',
				'patterns/pattern45.png' => 'pattern45.png',
				'patterns/pattern46.png' => 'pattern46.png',
				'patterns/pattern47.png' => 'pattern47.png',
				'patterns/pattern48.jpg' => 'pattern48.jpg',
				'patterns/pattern49.jpg' => 'pattern49.jpg',
				'patterns/pattern50.jpg' => 'pattern50.jpg',
				'patterns/pattern51.png' => 'pattern51.png',
				
            ),
            'type' => 'visual_selector',
            'group' => __( 'Design Options', 'js_composer' ),
        ),
        array(
	      'type' => 'colorpicker',
	      'holder' => 'div',
	      'class' => '',
	      'heading' => __('Font Color', 'Nimva'),
	      'param_name' => 'row_font_color',
	      'value' => '', //Default Red color
	      'description' => __('Choose font color for this row. Leave blank to use the default font color defined in Theme Options.', 'Nimva'),	      
          'group' => __( 'Design Options', 'js_composer' ),
	    ),	    
		array(
			'type' => 'checkbox',
			'heading' => __( 'Use video background?', 'js_composer' ),
			'param_name' => 'video_bg',
			'description' => __( 'If checked, video will be used as row background.', 'js_composer' ),
			'value' => array( __( 'Yes', 'js_composer' ) => 'yes' ),
			'group' => __( 'Video Background', 'js_composer' ),
		),
		array(
			'type' => 'textfield',
			'heading' => __('MP4 video file url - self hosted', 'Nimva'),
			'param_name' => 'mp4',
			'value' => '',
			'group' => __( 'Video Background', 'js_composer' ),
			'description' => __('Paste here the link to your MP4 video file.', 'Nimva'),
			'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
		),
		array(
			'type' => 'textfield',
			'heading' => __('WebM video file url - self hosted', 'Nimva'),
			'param_name' => 'webm',
			'value' => '',
			'group' => __( 'Video Background', 'js_composer' ),
			'description' => __('Paste here the link to your WebM video file.', 'Nimva'),
			'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
		),
		array(
			'type' => 'textfield',
			'heading' => __( 'YouTube link', 'js_composer' ),
			'param_name' => 'video_bg_url',
			'value' => '',
			// default video url
			'description' => __( 'Paste here the id of the YouTube video you want to use or paste the entire YouTube link. E.g: https://www.youtube.com/watch?v=lMJXxhRFO1k or lMJXxhRFO1k', 'js_composer' ),
			'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
			'group' => __( 'Video Background', 'js_composer' ),
		),
		array(
	    	'type' => 'range',
	        'heading' => __( 'Video Opacity', 'Nimva' ),
	        'param_name' => 'vid_opacity',
	        'value' => '70',
	        'min' => '0',
	        'max' => '100',
	        'step' => '5',				        
	        'description' => __( 'Select the video opacity, in percents. ', 'Nimva' ),
	        'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
	        'group' => __( 'Video Background', 'js_composer' )
	    ),
	    array(
		  'type' => 'attach_image',
		  'heading' => __('Video Placeholder Image for Mobile Devices', 'Nimva'),
		  'param_name' => 'video_placeholder',
		  'value' => '',
		  'group' => __( 'Video Background', 'js_composer' ),
		  'description' => __('Upload an image to be used as a background image for mobile devices.', 'Nimva'),
		  'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
		),

		array(
	      'type' => 'colorpicker',
	      'class' => '',
	      'heading' => __('Video Overlay Color', 'Nimva'),
	      'param_name' => 'video_overlay_col',
	      'value' => '', //Default White color
	      'description' => __('Add a colored background over the Video Background. Leave blank if you don\'t want to use this feature.', 'Nimva'),
	      'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
	      'group' => __( 'Video Background', 'js_composer' )
	    ),
		
		array(
	    	'type' => 'range',
	        'heading' => __( 'Video Overlay Opacity', 'Nimva' ),
	        'param_name' => 'video_overlay_opac',
	        'value' => '70',
	        'min' => '0',
	        'max' => '100',
	        'step' => '5',				        
	        'description' => __( 'Select the opacity of the colored background, in percents. ', 'Nimva' ),
	        'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
	        'group' => __( 'Video Background', 'js_composer' )
	    ),
		
		array(
	    	'heading' => __( 'Background Video Overlay Pattern', 'Nimva' ),
	    	'description' => __( 'You can optionally select an overlay pattern for your video background.', 'Nimva' ),
	        'param_name' => 'video_overlay',
	        'border' => 'true',
	        'value' => array(
	                    'no-image.png' => '',
	                    'overlay/overlay-pattern1.png' => 'overlay-pattern1.png',
	                    'overlay/overlay-pattern2.png' => 'overlay-pattern2.png',
						'overlay/overlay-pattern3.png' => 'overlay-pattern3.png',
						'overlay/overlay-pattern4.png' => 'overlay-pattern4.png',
	        ),
	        'type' => 'visual_selector',
	        'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
	        'group' => __( 'Video Background', 'js_composer' )
	    ),
		/*
		array(
			'type' => 'dropdown',
			'heading' => __( 'Parallax', 'js_composer' ),
			'param_name' => 'video_bg_parallax',
			'value' => array(
				__( 'None', 'js_composer' ) => '',
				__( 'Simple', 'js_composer' ) => 'content-moving',
				__( 'With fade', 'js_composer' ) => 'content-moving-fade',
			),
			'description' => __( 'Add parallax type background for row.', 'js_composer' ),
			'dependency' => array(
				'element' => 'video_bg',
				'not_empty' => true,
			),
			'group' => __( 'Video Background', 'js_composer' ),
		),
		array(
			'type' => 'textfield',
			'heading' => __( 'Parallax speed', 'js_composer' ),
			'param_name' => 'parallax_speed_video',
			'value' => '1.5',
			'description' => __( 'Enter parallax speed ratio (Note: Default value is 1.5, min value is 1)', 'js_composer' ),
			'dependency' => array(
				'element' => 'video_bg_parallax',
				'not_empty' => true,
			),
		),*/
		array(
	      	'type' => 'switch',
		  	'param_name' => 'bg_parallax',
		  	'value' => 'false',
	      	'heading' => __('Enable Parallax effect for the background image set under the Design Options tab?', 'Nimva'),
	      	'dependency' => array(
				'element' => 'video_bg',
				'is_empty' => true,
			),
			'group' => __( 'Parallax', 'js_composer' ),
	    ),/*
		array(
			'type' => 'dropdown',
			'heading' => __( 'Parallax', 'js_composer' ),
			'param_name' => 'parallax',
			'value' => array(
				__( 'None', 'js_composer' ) => '',
				__( 'Simple', 'js_composer' ) => 'content-moving',
				__( 'With fade', 'js_composer' ) => 'content-moving-fade',
			),
			'description' => __( 'Add parallax type background for row (Note: If no image is specified, parallax will use background image from Design Options).', 'js_composer' ),
			'dependency' => array(
				'element' => 'video_bg',
				'is_empty' => true,
			),
			'group' => __( 'Parallax', 'js_composer' ),
		),
		array(
			'type' => 'attach_image',
			'heading' => __( 'Image', 'js_composer' ),
			'param_name' => 'parallax_image',
			'value' => '',
			'description' => __( 'Select image from media library.', 'js_composer' ),
			'dependency' => array(
				'element' => 'parallax',
				'not_empty' => true,
			),
			'group' => __( 'Parallax', 'js_composer' ),
		),
		
		array(
			'type' => 'textfield',
			'heading' => __( 'Parallax speed', 'js_composer' ),
			'param_name' => 'parallax_speed_bg',
			'value' => '1.5',
			'description' => __( 'Enter parallax speed ratio (Note: Default value is 1.5, min value is 1)', 'js_composer' ),
			'dependency' => array(
				'element' => 'parallax',
				'not_empty' => true,
			),
			'group' => __( 'Parallax', 'js_composer' ),
		),*/

		array(
			'type' => 'checkbox',
			'heading' => __( 'Disable row', 'js_composer' ),
			'param_name' => 'disable_element', // Inner param name.
			'description' => __( 'If checked the row won\'t be visible on the public side of your website. You can switch it back any time.', 'js_composer' ),
			'value' => array( __( 'Yes', 'js_composer' ) => 'yes' ),
		),
		
		array(
			'type' => 'textfield',
			'heading' => __( 'Extra class name', 'js_composer' ),
			'param_name' => 'el_class',
			'description' => __( 'Style particular content element differently - add a class name and refer to it in custom CSS.', 'js_composer' ),
		),
		
	),
	'js_view' => 'VcRowView',
);